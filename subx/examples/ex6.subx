# Print out a (global variable) string to stdout.
#
# To run (from the subx directory):
#   $ ./subx translate examples/ex6.subx -o examples/ex6
#   $ ./subx run examples/ex6
#   Hello, world!

== code 0x09000000
#   instruction                     effective address                                                   register    displacement    immediate
# . op          subop               mod             rm32          base        index         scale       r32
# . 1-3 bytes   3 bits              2 bits          3 bits        3 bits      3 bits        2 bits      2 bits      0/1/2/4 bytes   0/1/2/4 bytes

Entry:
    # syscall(write, stdout, X, Size)
    # . fd = 1 (stdout)
    bb/copy-to-EBX  1/imm32
    # . initialize X (location to write result to)
    b9/copy-to-ECX  X/imm32
    # . initialize Size
    8b/copy                         0/mod/indirect  5/rm32/.disp32            .             .           2/r32/EDX   Size/disp32     .                 # copy *Size to EDX
    # . syscall
    b8/copy-to-EAX  4/imm32/write
    cd/syscall  0x80/imm8

    # syscall(exit, EBX)
    b8/copy-to-EAX  1/imm32/exit
    cd/syscall  0x80/imm8

== data 0x0a000000

Size:  # size of string
    0x0e/imm32  # 14
X:  # string to print
    48 65 6c 6c 6f 2c 20 77 6f 72 6c 64 21 0a       00
#   H  e  l  l  o  ,  ‚ê£  w  o  r  l  d  !  newline  null

# . . vim:nowrap:textwidth=0
