## add 1 and 1, and return the result in the exit code
#
# To run:
#   $ subx translate ex2.subx ex2
#   $ subx run ex2
# Expected result:
#   $ echo $?
#   2

== code
# instruction                     effective address                                                   operand     displacement    immediate
# op          subop               mod             rm32          base        index         scale       r32
# 1-3 bytes   3 bits              2 bits          3 bits        3 bits      3 bits        2 bits      2 bits      0/1/2/4 bytes   0/1/2/4 bytes
  bb/copy                                                                                                                         1/imm32           # copy 1 to EBX
  81          0/subop/add         3/mod/direct    3/rm32/EBX                                                                      1/imm32           # add 1 to EBX
  # exit(EBX)
  b8/copy                                                                                                                         1/imm32           # copy 1 to EAX
  cd/syscall  0x80/imm8

# vim:ft=subx
