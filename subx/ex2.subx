## add 1 and 1

# opcode        ModR/M                    SIB                   displacement    immediate
# instruction   mod, reg, Reg/Mem bits    scale, index, base
# 1-3 bytes     0/1 byte                  0/1 byte              0/1/2/4 bytes   0/1/2/4 bytes
  bb                                                                            1/imm32       # copy 42 to EBX
  81            c3                                                              1/imm32       # add 1 to EBX
  # exit
  b8                                                                            1/imm32       # copy 1 to EAX
  cd                                                                            128/imm8      # int 80h

# vim:ft=subx
